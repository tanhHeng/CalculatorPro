import numpy

# https://www.numpy.org.cn/reference/routines/math.html

DEFAULT_FUNC_DESCRIPTIONS = {
    'sin': '正弦函数, element-wise.',
    'cos': '余弦函数 element-wise.',
    'tan': '正切函数, element-wise.',
    'arcsin': '反正弦函数, element-wise.',
    'arccos': '反余弦函数, element-wise.',
    'arctan': '反正切函数, element-wise.',
    'hypot': '传入直角三角形的“直角边”，返回其斜边。',
    'arctan2': 'x1 / x2的 Element-wise 反正切线正确选择象限。',
    'degrees': '将角度从弧度转换为度。',
    'radians': '将角度从度转换为弧度。',
    'unwrap': '通过将值之间的增量更改为2 * pi来展开。',
    'deg2rad': '将角度从度转换为弧度。',
    'rad2deg': '将角度从弧度转换为度。',
    'sinh': '双曲正弦, element-wise.',
    'cosh': '双曲余弦, element-wise.',
    'tanh': '计算双曲正切 element-wise.',
    'arcsinh': '反双曲正弦 element-wise.',
    'arccosh': '反双曲余弦, element-wise.',
    'arctanh': '反双曲正切 element-wise.',
    'around': '平均舍入到给定的小数位数。',
    'round_': '将数组舍入到给定的小数位数。',
    'rint': '将数组的元素四舍五入到最接近的整数。',
    'fix': '四舍五入为零。',
    'floor': '返回输入的底限, element-wise.',
    'ceil': '返回输入的上限, element-wise.',
    'trunc': '返回输入的截断值, element-wise.',
    'prod': '返回给定轴上数组元素的乘积。',
    'sum': '给定轴上的数组元素的总和。',
    'nanprod': '返回数组元素在给定轴上的乘积，将非数字（NaNs）视为一个。',
    'nansum': '返回给定轴上的数组元素的总和，将非数字（NaNs）视为零。',
    'cumprod': '返回沿给定轴的元素的累加乘积。',
    'cumsum': '返回沿给定轴的元素的累加和。',
    'nancumprod': '返回数组元素在给定轴上的累积乘积，将非数字（NaNs）视为一个。',
    'nancumsum': '返回在给定轴上将非数字（NaNs）视为零的数组元素的累积总和。',
    'diff': '计算沿给定轴的第n个离散差。',
    'ediff1d': '数组的连续元素之间的差值。',
    'gradient': '返回N维数组的梯度。',
    'cross': '返回两个（数组）向量的叉积。',
    'trapz': '使用复合梯形规则沿给定轴积分。',
    'exp': '计算输入数组中所有元素的指数。',
    'expm1': '为数组中的所有元素计算exp（x）-1。',
    'exp2': '为输入数组中的所有p计算2 ** p。',
    'log': '自然对数, element-wise.',
    'log10': '返回输入数组的以10为底的对数, element-wise.',
    'log2': 'x的以2为底的对数。',
    'log1p': '返回元素加一个输入数组的自然对数。',
    'logaddexp': '输入取幂之和的对数。',
    'logaddexp2': '以2为底的输入的幂和的对数。',
    'i0': '第一种修改的Bessel函数，阶数为0。',
    'sinc': '返回sinc函数。',
    'signbit': '在设置了符号位（小于零）的情况下返回 element-wise True。',
    'copysign': '将x1的符号更改为x2的符号, element-wise.',
    'frexp': '将x的元素分解为尾数和二进制指数。',
    'ldexp': '返回x1 * 2 ** x2, element-wise.',
    'nextafter': '向x2返回x1之后的下一个浮点值, element-wise.',
    'spacing': '返回x与最近的相邻数字之间的距离。',
    'lcm': '返回1和x2的最小公倍数',
    'gcd': '返回x1和x2的最大公约数',
    'add': '按元素添加参数。',
    'reciprocal': '以元素为单位返回参数的倒数。',
    'positive': '数值正, element-wise.',
    'negative': '数值负数, element-wise.',
    'multiply': '逐个乘以参数。',
    'divide': '返回输入的真实除法, element-wise.',
    'power': '第一阵列元素从第二阵列提升为幂, element-wise.',
    'subtract': '逐个元素地减去参数。',
    'true_divide': '返回输入的真实除法, element-wise.',
    'floor_divide': '返回小于或等于输入的除法的最大整数。',
    'float_power': '第一阵列元素从第二阵列提升为幂, element-wise.',
    'fmod': '返回元素的除法 remainder。',
    'mod': '返回元素的除法余数。',
    'modf': '返回数组的分数和整数部分, element-wise.',
    'remainder': '返回元素的除法余数。',
    'divmod': '同时返回按元素商和余数。',
    'angle': '返回复杂参数的角度。',
    'real': '返回复杂参数的实部。',
    'imag': '返回复杂参数的虚部。',
    'conj': '返回 complex conjugate, element-wise.',
    'conjugate': '返回复共轭, element-wise.',
    'convolve': '返回两个一维序列的离散线性卷积。',
    'clip': '裁剪（限制）数组中的值。',
    'sqrt': '返回数组的非负 平方根, element-wise.',
    'cbrt': '返回数组的立方根, element-wise.',
    'square': '返回输入的元素方平方。',
    'absolute': '计算绝对值 element-wise.',
    'fabs': '计算绝对值 element-wise.',
    'sign': '返回数字符号的逐元素指示。',
    'heaviside': '计算Heaviside阶跃函数。',
    'maximum': '数组元素的逐元素最大值。',
    'minimum': '数组元素的按元素最小值。',
    'fmax': '数组元素的逐元素最大值。',
    'fmin': '数组元素的按元素最小值。',
    'nan_to_num': '用较大的有限数字（默认行为）或使用用户定义的nan，posinf和/或neginf关键字定义的数字将NaN替换为零和无穷大。',
    'real_if_close': '如果复杂输入接近实数，则返回复杂数组。',
    'interp': '一维线性插值'
}

DEFAULT_DATA = {"default_functions":{"numpy": DEFAULT_FUNC_DESCRIPTIONS},"defined_functions":[]}

PLUGIN_ID = "calculator_pro"
PLUGIN_NAME = "Calculator+"